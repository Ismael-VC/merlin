@REPL ( char -> ) [
  ( Read )
  .Console/read DEI
  ( DUP SP NEQ ?{ POP BRK ( ignore ) } )
  DUP LIT "@ NEQ ?{ #01 ;&assemble STA }
  DUP LIT "[ NEQ ?{ #00 ,&multi-line STR POP BRK }
  DUP LIT "] NEQ ?{ #01 ,&multi-line STR POP BRK }
  DUP LIT "( NEQ ?{ #00 ,&comment STR POP BRK }
  DUP LIT ") NEQ ?{ #01 ,&comment STR POP BRK }
  DUP NL EQU ?{
    [ LIT &comment 01 ] ?{
      POP BRK }
    ;input-ptr LDA2 STA
    ;input-ptr LDA2 INC2 ;input-ptr STA2  BRK }
  [ LIT &multi-line 01 ] ?{
    { 2020 2020 2020 "... \s \0 } STH2r <pstr>
    ;input-ptr LDA2 STA
    ;input-ptr LDA2 INC2 ;input-ptr STA2  BRK
    POP BRK }
  POP ( consume last newline )
  ;heap-ptr LDA2 STH2
  <assemble>
  ;REPL/assemble LDA ?{
    ( assemble expr return jump )
    #a0 ;heap-ptr LDA2 STA
    ;REPL/expr-return ;heap-ptr LDA2 INC2 STA2
    #2c ;heap-ptr LDA2 INC2 INC2 INC2 STA
    ( reset expr-ptr )
    STH2kr ;heap-ptr STA2 }
  ;input ;input-ptr STA2 ( reset input-ptr )

  ( Eval )
  [ LIT &assemble $1 ] ?{
    STH2kr JMP2

    &expr-return
      STH2kr ;<create-symbol>/ptr STA2
      STH2r ;length <mclr> !&continue }
  POP2r
  &continue
  #00 ,&assemble STR
  ;input #0100 <mclr>
  #0000 ;length STA2


  ( Print )
  DBG
  #01 ?{
    { \n "@heap \0 } ;heap <pobj>
    { \n "@mem/symbols \0 } ;mem/symbols <pobj> }

  ( Loop )
  <print-prompt> BRK
]

@banner [
   \s \s "█ "▄ \s \s NAME
   "▐ \s "█ \s "▌ \s DESCRIPTION
   \s "▀ "█ \s \s \s AUTHOR
   \s \s \s \s \s \s \0 ( "Type \s ""help" \s "for \s "help. \s )
]

@<pmem-usage> ( -- ) [
  ;end ;heap-ptr LDA2 SUB2 <pdec>
  ;&free <pstr>
  JMP2r
    &free [ \s "bytes \s "free. \n \0 ]
]

@<print-prompt> ( -- ) [
  ;&prompt-start <pstr>
  ;heap-ptr LDA2 <phex>
  ;&prompt-end <pstr>
  JMP2r
    &prompt-start \n "փ \s "[ \0
    &prompt-end   "]> \s \0
]
