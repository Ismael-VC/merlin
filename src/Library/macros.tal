( macros )
%VERSION { "00.03 }  %DATE { "05/05/07e8-17:14:0e }
%NAME { "Monocycle \s "CLI \s "REPL \t "Version \s VERSION \s 28 DATE 29 \n }
%DESCRIPTION {
  "Varvara/Uxn \s "Concatenated \s "Interpretive \s "Uxntal \s "JIT \s
  "Assembler. \n }
%AUTHOR { "©07e8 \s "Ismael \s "Venegas \s "Castelló, \s "MIT \s "License. \n }

(
    %<space> ( -- )

  Emit a space character to standard output.

  # Examples
    > [ LIT "a ] <emit> <space> [ LIT "b ] <emit> <newline>
    a b
)
%<space> ( -- ) { [ LIT2 \s -Console/write ] DEO }

(
    %<newline> ( -- )

  Emit a new line character to standard output.

  # Examples
    > [ LIT "a ] <emit> <newline> [ LIT "b ] <emit> <newline>
    a
    b
)
%<newline> ( -- ) { [ LIT2 \n -Console/write ] DEO }

(
    %<emit> ( c -- )

  Emit a character to standard output.

  # Arguments
  - `c`: Byte representing an ASCII character.

  # Examples
    > #55 <emit> <space> [ LIT "U ] <emit> <newline>
    U U
)
%<emit> ( c -- ) { #18 DEO }

(
    %\0 ( -- )

  Indicate the end of a raw null terminated string, used instead of the raw
  byte: `00`, `BRK` or `$1`.

  # Examples
    > @foo "This \s "is \s "a \s "test! \n \0
    > @foo "This \s "is \s "a \s "test! \n BRK
    > @foo "This \s "is \s "a \s "test! \n $1
    > @foo "This 20 "is 20 "a 20 "test! 0a 00
)
%\0 { 00 }

(
    %\t ( -- )

  Indicate a tab in a raw string, used instead of the raw byte: `09`.

  # Examples
    > @foo [
      "This \s "is \s "the \s "first \s "line, \n
      \t "The \s "second \s "line \s "is \s "tabbed. \n
      09 "The \s "third \s "line \s "is \s "tabbed. \n \0
    ]
    > ;foo <pstr>
    This is the first line,
        The second line is tabbed.
        The third line is tabbed.
)
%\t { 09 }

(
    %\s ( -- )

  Indicate a space in a raw string, used instead of: `20`.

  # Examples
    > @foo "This \s "is \s "a 20 "spaces 20 "example. \n \0
    > ;foo <pstr>
    This is a spaces example.
)
%\s { 20 }

(
    %\n ( -- )

  Indicate a newline in a raw string, used instead of the raw byte: `0a`.

  # Examples
    > @foo [
      "This \s "is \s "the \s "first \s "line, \n
      "This \s "is \s "the \s "second \s "line. 0a
    ]
    > ;foo <pstr>
    This is the first line,
    This is the second line.
)
%\n { 0a }

(
    %NL ( -- )

  Push the ASCII value of the new line character (`#0a`) to the stack.

  # Examples
    > [ LIT "a ] <emit> NL <emit> [ LIT "b ] <emit> #0a <emit>
    a
    b
    >
)
%NL { #0a }

(
    %SP ( -- )

  Push the ASCII value of the space character (`#20`) to the stack.

  # Examples
    > [ LIT "a ] <emit> SP <emit> [ LIT "b ] <emit> <newline>
    a b
    > [ LIT "c ] <emit> #20 <emit> [ LIT "d ] <emit> <newline>
    c d
)
%SP { #20 }

(
    %TB ( -- )

  Push the ASCII value of the tabulator character (`#09`) to the stack.

  # Examples
    > [ LIT "a ] <emit> <newline> TB <emit> [ LIT "b ] <emit> <newline>
    a
        b
    > [ LIT "c ] <emit> <newline> #09 <emit> [ LIT "d ] <emit> <newline>
    c
        d
)
%TB { #09 }
